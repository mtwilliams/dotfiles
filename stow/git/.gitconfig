[user]
	name = Michael Williams
	username = mtwilliams
	email = me@mtwilliams.io
	signingkey = 7D333918B7FC616F7730CED101C2BABFB1D49A56!

[alias]
	# Lists all aliases.
	aliases = ! git config --get-regexp '^alias\\.' | cut -c 7- | sed 's/ / = /'

	# Path to the root of the repository.
	root = rev-parse --show-toplevel

	# Gets the default, master, branch for the repository.
	default = ! ~/.dotfiles/git/default.sh

	# Gets the corresponding upstream branch for the current branch.
	upstream = ! git rev-parse --abbrev-ref --symbolic-full-name \"@{u}\" 2>/dev/null

	# Determines where two branches diverge.
	diverges = ! ~/.dotfiles/git/diverges.sh

	# Lists all local branches that don't have an upstream.
	homeless = "! git branch --format \"%(refname:short) %(upstream:short)\" | awk '{if (!$2) print $1;}'"

	# Lists all local branches that are behind their upstreams.
	stale = ! ~/.dotfiles/git/stale.sh

	# Grabs the latest changes to the current branch from upstream and shows whathas changed.
	refresh = ! ~/.dotfiles/git/refresh.sh

	# Unstages any staged changes.
	unstage = reset HEAD --

	# Undoes the previous commit and pull its changes into the work tree.
	uncommit = reset --soft HEAD^

	# Amends changes to the previous commit without modifying the message.
	fixup = commit --amend --no-edit

	# Determines where two branches diverge.
	yoink = ! ~/.dotfiles/git/yoink.sh

	# Shorter and easier to read log.
	lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%C(bold blue)<%an>%Creset' --abbrev-commit
	logtree = log --graph --oneline --decorate --all
	lgt = logtree

	# Lists authors by number of changes.
	authors = ! ~/.dotfiles/git/authors.sh

	# Lists files by number of changes.
	#
	# https://github.com/GitAlias/gitalias/tree/main/doc/git-churn
	churn = ! ~/.dotfiles/git/churn.sh

	# Remove merged branches.
	cleanup = ! ~/.dotfiles/git/cleanup.sh

[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true

[core]
	editor = vim
	ignorecase = true
	excludesFile = ~/.gitignore

[pull]
	# Only fast-forward. Otherwise `git fetch` and merge/rebase manually.
	ff = only

[diff]
	tool = kaleidoscope
	submodule = diff

[difftool]
	prompt = false

[difftool "kaleidoscope"]
	cmd = ksdiff --partial-changeset --relative-path \"$MERGED\" -- \"$LOCAL\" \"$REMOTE\"

[difftool "vscode"]
	cmd = code --wait --diff $LOCAL $REMOTE

[merge]
	tool = kaleidoscope

[mergetool]
	prompt = false

[mergetool "kaleidoscope"]
	cmd = ksdiff --merge --output \"$MERGED\" --base \"$BASE\" -- \"$LOCAL\" --snapshot \"$REMOTE\" --snapshot
	trustExitCode = true

[mergetool "vscode"]
	cmd = code --wait $MERGED

[commit]
	gpgsign = true

[tag]
	gpgsign = true

[push]
	autoSetupRemote = true
